<html>
  <%- include('partials/header'); -%>
  <body>
    <div class = "small-container cart-page">
        <table id="checkout-items">
            <tr>
                <td>Product</td>
                <td>Quantity</td>
                <td> Sub Total</td>
            </tr>
            <tbody id="all-checkout-items">
                <!-- <td>
                    <div class="cart-info">
                        <img src="public\smoothie.png">
                        <div>
                            <p>Red Printed Tshirt</p>
                            <small>Price: $50.00</small>
                            <a href="">Remove</a>
                        </div>
                    </div>
                </td>
                <td><input type="number" value="1"></td>
                <td>10045</td> -->
            </tbody>
            <br>
        </table>
        <div class="total-price">
            <table>
                <button onclick="window.location.reload()">Update cart</button>
                <tr>
                    <td>Total</td>
                    <td id="total-price"></td>
                </tr>
            </table>

        </div>
        <button id="checkout">Pay and Checkout</button>

    </div>
    <p id="useremail" style="visibility: hidden;"><%=user.email%></p> 
    <script src="https://js.paystack.co/v1/inline.js"></script>
  </body>
   

  <%- include('partials/footer'); -%>
  </html>

<script>
    let cart;
    let totalPrice = 0;
    function retrieveCartItems(tbody){
        for (let item of tbody.children){
            const totalprice=0
            const tr = item
            const id = Array.from(tr.children).find( el => el.id === 'product-id')
            const itemPrice = Array.from(tr.children).find( el => el.id === 'price')
            const itemQuantity = Array.from(tr.children).find( el => el.id === 'product-quantity')
            const itemQuantityValue = Array.from(itemQuantity.children).find( el => el.id === 'product-quantity-value')
            const increasebtn = Array.from(itemQuantity.children).find( el => el.id === 'increase-quantity')
            const decreasebtn = Array.from(itemQuantity.children).find( el => el.id === 'decrease-quantity')
            increasebtn.onclick = function () {
                var cart = JSON.parse(localStorage.getItem('cart') || "[]") // this
                let existingItem = cart.find(item => item.id == id.textContent); //this

                if(existingItem) {
                    if (existingItem.quantity>0){
                        existingItem.quantity += 1;
                        existingItem.price = existingItem.quantity * existingItem.unitPrice;
                        itemQuantityValue.textContent = existingItem.quantity
                        itemPrice.textContent = existingItem.price
                    }
                    
                }
                
  
                localStorage.setItem('cart', JSON.stringify(cart))
            }

            decreasebtn.onclick = function () {
                var cart = JSON.parse(localStorage.getItem('cart') || "[]") // this
                let existingItem = cart.find(item => item.id == id.textContent); //this

                if(existingItem && !(existingItem.quantity-1==0)) {
                    if (existingItem.quantity >0){
                        existingItem.quantity -= 1;
                        existingItem.price = existingItem.quantity * existingItem.unitPrice;
                        itemQuantityValue.textContent = existingItem.quantity
                        itemPrice.textContent = existingItem.price
                    }
                    
                    
                }

  
                localStorage.setItem('cart', JSON.stringify(cart))
            }
            
            
}    

        
    }
    function displayCartItems(){
        
        var itemsInCart = JSON.parse(localStorage.getItem('cart'))
        // create a table with js

        const table = document.getElementById('checkout-items');
        
        const tbody = document.getElementById('all-checkout-items');
        
        console.log({table})

        for ( let item of itemsInCart ) {
            // create a new row in tbody 
            const row = document.createElement('tr');
            const fieldsTest = Object.entries(item).forEach(
                ([key, value]) => {
                    if(key == 'quantity') {      
                        const quantityField = document.createElement('span')
                        const quantityValue = document.createElement('p')
                        quantityField.id = 'product-quantity'
                        quantityValue.id = 'product-quantity-value'
                        const increase = document.createElement('button')
                        increase.id = 'increase-quantity'
                        increase.class = 'cart-btn'
                        const decrease = document.createElement('button')
                        decrease.id= 'decrease-quantity'
                        decrease.class = 'cart-btn'
                        increase.textContent = "+"
                        decrease.textContent = "-"
                        // increase.onclick = function () {
                        //     increasePrice(value)
                        // }
                        // decrease.onclick = function () {
                        //     decreasePrice(value)
                        // }
                        quantityValue.textContent = value
                        quantityField.appendChild(quantityValue)
                        quantityField.appendChild(increase)
                        quantityField.appendChild(decrease)
                        row.appendChild(quantityField)
                    } 
                    if (key == 'name') {
                        const nameField = document.createElement('td')
                        nameField.id = 'product-name'
                        nameField.textContent = value
                        row.appendChild(nameField)
                    }
                    if (key == 'price') {
                        const priceField = document.createElement('td');
                        priceField.id = 'price'
                        priceField.textContent = value
                        totalPrice += +value
                        row.appendChild(priceField)
                    }
                    if (key == 'id') {
                        const idField = document.createElement('td');
                        idField.style={
                            display:'none',
                        }
                        idField.id = 'product-id'
                        idField.textContent = value
                        row.appendChild(idField)
                        
                    }
                }
            )
            tbody.appendChild(row);
        }
        table.appendChild(tbody);
        retrieveCartItems(tbody);
        document.getElementById("total-price").textContent = totalPrice;

    }
    
    displayCartItems()
    
    const paymentForm = document.getElementById('checkout');

    paymentForm.addEventListener("click", payWithPaystack, false);

    function payWithPaystack(e) {

    e.preventDefault();
    console.log(document.getElementById("useremail"))
    const res = fetch('/cart',{
                method:'POST',
                body: JSON.stringify({email:document.getElementById("useremail").textContent}),
                headers:{'Content-Type': 'application/json'}
            });



    let handler = PaystackPop.setup({

        key: "pk_test_416ac228a74b84877c1729dbeacaaaf6b1792e8f", // Replace with your public key

        email: document.getElementById("useremail").textContent,

        amount: document.getElementById("total-price").textContent * 100,

        ref: ''+Math.floor((Math.random() * 1000000000) + 1), // generates a pseudo-unique reference. Please replace with a reference you generated. Or remove the line entirely so our API will generate one for you

        // label: "Optional string that replaces customer email"
        onClose: function(){

        alert('Window closed.');
        },
        callback: function(response){
            console.log(response)

        let message = 'Payment complete! Reference: ' + response.reference;
        alert(message);
        
        
        window.location = "http://localhost:3000/cart?reference=" + response.reference;
        localStorage.clear();
        }

    });
    handler.openIframe();
}

</script>